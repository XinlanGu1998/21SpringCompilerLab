Starting parse
Entering state 0
Reading a token: Next token is token STRUCT ()
Shifting token STRUCT ()
Entering state 3
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reading a token: Next token is token LC ()
Reducing stack by rule 16 (line 65):
   $1 = token ID ()
-> $$ = nterm OptTag ()
Stack now 0 3
Entering state 11
Next token is token LC ()
Shifting token LC ()
Entering state 21
Reading a token: Next token is token TYPE ()
Shifting token TYPE ()
Entering state 2
Reducing stack by rule 12 (line 59):
   $1 = token TYPE ()
-> $$ = nterm Specifier ()
Stack now 0 3 11 21
Entering state 33
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 42
Reducing stack by rule 19 (line 73):
   $1 = token ID ()
-> $$ = nterm VarDec ()
Stack now 0 3 11 21 33
Entering state 49
Reading a token: Next token is token COMMA ()
Reducing stack by rule 49 (line 119):
   $1 = nterm VarDec ()
-> $$ = nterm Dec ()
Stack now 0 3 11 21 33
Entering state 51
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 75
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 42
Reducing stack by rule 19 (line 73):
   $1 = token ID ()
-> $$ = nterm VarDec ()
Stack now 0 3 11 21 33 51 75
Entering state 49
Reading a token: Next token is token SEMI ()
Reducing stack by rule 49 (line 119):
   $1 = nterm VarDec ()
-> $$ = nterm Dec ()
Stack now 0 3 11 21 33 51 75
Entering state 51
Next token is token SEMI ()
Reducing stack by rule 47 (line 116):
   $1 = nterm Dec ()
-> $$ = nterm DecList ()
Stack now 0 3 11 21 33 51 75
Entering state 102
Reducing stack by rule 48 (line 117):
   $1 = nterm Dec ()
   $2 = token COMMA ()
   $3 = nterm DecList ()
-> $$ = nterm DecList ()
Stack now 0 3 11 21 33
Entering state 50
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 74
Reducing stack by rule 45 (line 113):
   $1 = nterm Specifier ()
   $2 = nterm DecList ()
   $3 = token SEMI ()
-> $$ = nterm Def ()
Stack now 0 3 11 21
Entering state 35
Reading a token: Next token is token RC ()
Reducing stack by rule 44 (line 111):
-> $$ = nterm DefList ()
Stack now 0 3 11 21 35
Entering state 53
Reducing stack by rule 43 (line 110):
   $1 = nterm Def ()
   $2 = nterm DefList ()
-> $$ = nterm DefList ()
Stack now 0 3 11 21
Entering state 34
Next token is token RC ()
Shifting token RC ()
Entering state 52
Reducing stack by rule 14 (line 62):
   $1 = token STRUCT ()
   $2 = nterm OptTag ()
   $3 = token LC ()
   $4 = nterm DefList ()
   $5 = token RC ()
-> $$ = nterm StructSpecifier ()
Stack now 0
Entering state 8
Reducing stack by rule 13 (line 60):
   $1 = nterm StructSpecifier ()
-> $$ = nterm Specifier ()
Stack now 0
Entering state 7
Reading a token: Next token is token SEMI ()
Shifting token SEMI ()
Entering state 17
Reducing stack by rule 7 (line 49):
   $1 = nterm Specifier ()
   $2 = token SEMI ()
-> $$ = nterm ExtDef ()
Stack now 0
Entering state 6
Reading a token: Next token is token TYPE ()
Shifting token TYPE ()
Entering state 2
Reducing stack by rule 12 (line 59):
   $1 = token TYPE ()
-> $$ = nterm Specifier ()
Stack now 0 6
Entering state 7
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 16
Reading a token: Next token is token LP ()
Shifting token LP ()
Entering state 24
Reading a token: Next token is token RP ()
Shifting token RP ()
Entering state 38
Reducing stack by rule 23 (line 78):
   $1 = token ID ()
   $2 = token LP ()
   $3 = token RP ()
-> $$ = nterm FunDec ()
Stack now 0 6 7
Entering state 20
Reading a token: Next token is token LC ()
Shifting token LC ()
Entering state 30
Reading a token: Next token is token STRUCT ()
Shifting token STRUCT ()
Entering state 3
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reading a token: Next token is token ID ()
Reducing stack by rule 18 (line 68):
   $1 = token ID ()
-> $$ = nterm Tag ()
Stack now 0 6 7 20 30 3
Entering state 12
Reducing stack by rule 15 (line 63):
   $1 = token STRUCT ()
   $2 = nterm Tag ()
-> $$ = nterm StructSpecifier ()
Stack now 0 6 7 20 30
Entering state 8
Reducing stack by rule 13 (line 60):
   $1 = nterm StructSpecifier ()
-> $$ = nterm Specifier ()
Stack now 0 6 7 20 30
Entering state 33
Next token is token ID ()
Shifting token ID ()
Entering state 42
Reducing stack by rule 19 (line 73):
   $1 = token ID ()
-> $$ = nterm VarDec ()
Stack now 0 6 7 20 30 33
Entering state 49
Reading a token: Next token is token SEMI ()
Reducing stack by rule 49 (line 119):
   $1 = nterm VarDec ()
-> $$ = nterm Dec ()
Stack now 0 6 7 20 30 33
Entering state 51
Next token is token SEMI ()
Reducing stack by rule 47 (line 116):
   $1 = nterm Dec ()
-> $$ = nterm DecList ()
Stack now 0 6 7 20 30 33
Entering state 50
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 74
Reducing stack by rule 45 (line 113):
   $1 = nterm Specifier ()
   $2 = nterm DecList ()
   $3 = token SEMI ()
-> $$ = nterm Def ()
Stack now 0 6 7 20 30
Entering state 35
Reading a token: Next token is token ID ()
Reducing stack by rule 44 (line 111):
-> $$ = nterm DefList ()
Stack now 0 6 7 20 30 35
Entering state 53
Reducing stack by rule 43 (line 110):
   $1 = nterm Def ()
   $2 = nterm DefList ()
-> $$ = nterm DefList ()
Stack now 0 6 7 20 30
Entering state 47
Next token is token ID ()
Shifting token ID ()
Entering state 61
Reading a token: Next token is token DOT ()
Reducing stack by rule 70 (line 144):
   $1 = token ID ()
-> $$ = nterm Exp ()
Stack now 0 6 7 20 30 47
Entering state 71
Next token is token DOT ()
Shifting token DOT ()
Entering state 96
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 124
Reducing stack by rule 69 (line 143):
   $1 = nterm Exp ()
   $2 = token DOT ()
   $3 = token ID ()
-> $$ = nterm Exp ()
Stack now 0 6 7 20 30 47
Entering state 71
Reading a token: Next token is token ASSIGNOP ()
Shifting token ASSIGNOP ()
Entering state 87
Reading a token: Next token is token FLOAT ()
Shifting token FLOAT ()
Entering state 60
Reducing stack by rule 72 (line 146):
   $1 = token FLOAT ()
-> $$ = nterm Exp ()
Stack now 0 6 7 20 30 47 71 87
Entering state 114
Reading a token: Next token is token SEMI ()
Reducing stack by rule 52 (line 126):
   $1 = nterm Exp ()
   $2 = token ASSIGNOP ()
   $3 = nterm Exp ()
-> $$ = nterm Exp ()
Stack now 0 6 7 20 30 47
Entering state 71
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 97
Reducing stack by rule 35 (line 98):
   $1 = nterm Exp ()
   $2 = token SEMI ()
-> $$ = nterm Stmt ()
Stack now 0 6 7 20 30 47
Entering state 70
Reading a token: Next token is token RC ()
Reducing stack by rule 34 (line 96):
-> $$ = nterm StmtList ()
Stack now 0 6 7 20 30 47 70
Entering state 85
Reducing stack by rule 33 (line 95):
   $1 = nterm Stmt ()
   $2 = nterm StmtList ()
-> $$ = nterm StmtList ()
Stack now 0 6 7 20 30 47
Entering state 72
Next token is token RC ()
Shifting token RC ()
Entering state 99
Reducing stack by rule 30 (line 91):
   $1 = token LC ()
   $2 = nterm DefList ()
   $3 = nterm StmtList ()
   $4 = token RC ()
-> $$ = nterm CompSt ()
Stack now 0 6 7 20
Entering state 31
Reducing stack by rule 9 (line 51):
   $1 = nterm Specifier ()
   $2 = nterm FunDec ()
   $3 = nterm CompSt ()
-> $$ = nterm ExtDef ()
Stack now 0 6
Entering state 6
Reading a token: Now at end of input.
Reducing stack by rule 3 (line 44):
-> $$ = nterm ExtDefList ()
Stack now 0 6 6
Entering state 14
Reducing stack by rule 2 (line 43):
   $1 = nterm ExtDef ()
   $2 = nterm ExtDefList ()
-> $$ = nterm ExtDefList ()
Stack now 0 6
Entering state 14
Reducing stack by rule 2 (line 43):
   $1 = nterm ExtDef ()
   $2 = nterm ExtDefList ()
-> $$ = nterm ExtDefList ()
Stack now 0
Entering state 5
Reducing stack by rule 1 (line 41):
   $1 = nterm ExtDefList ()
-> $$ = nterm Program ()
Stack now 0
Entering state 4
Now at end of input.
Shifting token $end ()
Entering state 13
Stack now 0 4 13
Cleanup: popping token $end ()
Cleanup: popping nterm Program ()
