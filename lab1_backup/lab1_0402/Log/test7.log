Starting parse
Entering state 0
Reading a token: Next token is token TYPE (1.1-2: )
Shifting token TYPE (1.1-2: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (1.1-2: )
-> $$ = nterm Specifier (1.1-2: )
Stack now 0
Entering state 7
Reading a token: Next token is token ID (1.5-7: )
Shifting token ID (1.5-7: )
Entering state 16
Reading a token: Next token is token LP (1.9: )
Shifting token LP (1.9: )
Entering state 27
Reading a token: Next token is token RP (1.10: )
Shifting token RP (1.10: )
Entering state 40
Reducing stack by rule 25 (line 87):
   $1 = token ID (1.5-7: )
   $2 = token LP (1.9: )
   $3 = token RP (1.10: )
-> $$ = nterm FunDec (1.5-9: )
Stack now 0 7
Entering state 20
Reading a token: Next token is token RC (1.11: )
Shifting token error (1.11: )
Entering state 22
Next token is token RC (1.11: )
Shifting token RC (1.11: )
Entering state 36
Reducing stack by rule 36 (line 109):
   $1 = token error (1.11: )
   $2 = token RC (1.11: )
-> $$ = nterm CompSt (1.11: )
Stack now 0 7 20
Entering state 32
Reducing stack by rule 6 (line 52):
   $1 = nterm Specifier (1.1-2: )
   $2 = nterm FunDec (1.5-9: )
   $3 = nterm CompSt (1.11: )
-> $$ = nterm ExtDef (1.1-10: )
Stack now 0
Entering state 6
Reading a token: Next token is token TYPE (3.1-2: )
Shifting token TYPE (3.1-2: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (3.1-2: )
-> $$ = nterm Specifier (3.1-2: )
Stack now 0 6
Entering state 7
Reading a token: Next token is token ID (3.5-7: )
Shifting token ID (3.5-7: )
Entering state 16
Reading a token: Next token is token LP (3.9: )
Shifting token LP (3.9: )
Entering state 27
Reading a token: Next token is token RP (3.10: )
Shifting token RP (3.10: )
Entering state 40
Reducing stack by rule 25 (line 87):
   $1 = token ID (3.5-7: )
   $2 = token LP (3.9: )
   $3 = token RP (3.10: )
-> $$ = nterm FunDec (3.5-9: )
Stack now 0 6 7
Entering state 20
Reading a token: Next token is token LC (3.11: )
Shifting token LC (3.11: )
Entering state 23
Reading a token: Next token is token ID (4.5: )
Reducing stack by rule 58 (line 138):
-> $$ = nterm DefList (3.11: )
Stack now 0 6 7 20 23
Entering state 37
Next token is token ID (4.5: )
Shifting token ID (4.5: )
Entering state 58
Reading a token: Next token is token LB (4.6: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (4.5: )
-> $$ = nterm Exp (4.5: )
Stack now 0 6 7 20 23 37
Entering state 68
Next token is token LB (4.6: )
Shifting token LB (4.6: )
Entering state 107
Reading a token: Next token is token INT (4.7: )
Shifting token INT (4.7: )
Entering state 56
Reducing stack by rule 85 (line 174):
   $1 = token INT (4.7: )
-> $$ = nterm Exp (4.7: )
Stack now 0 6 7 20 23 37 68 107
Entering state 144
Reading a token: Next token is token RB (4.8: )
Shifting token RB (4.8: )
Entering state 155
Reducing stack by rule 82 (line 171):
   $1 = nterm Exp (4.5: )
   $2 = token LB (4.6: )
   $3 = nterm Exp (4.7: )
   $4 = token RB (4.8: )
-> $$ = nterm Exp (4.5-7: )
Stack now 0 6 7 20 23 37
Entering state 68
Reading a token: Next token is token ASSIGNOP (4.10: )
Shifting token ASSIGNOP (4.10: )
Entering state 99
Reading a token: Next token is token INT (4.12: )
Shifting token INT (4.12: )
Entering state 56
Reducing stack by rule 85 (line 174):
   $1 = token INT (4.12: )
-> $$ = nterm Exp (4.12: )
Stack now 0 6 7 20 23 37 68 99
Entering state 135
Reading a token: Next token is token SEMI (4.13: )
Reducing stack by rule 69 (line 158):
   $1 = nterm Exp (4.5-7: )
   $2 = token ASSIGNOP (4.10: )
   $3 = nterm Exp (4.12: )
-> $$ = nterm Exp (4.5-11: )
Stack now 0 6 7 20 23 37
Entering state 68
Next token is token SEMI (4.13: )
Shifting token SEMI (4.13: )
Entering state 109
Reducing stack by rule 40 (line 115):
   $1 = nterm Exp (4.5-11: )
   $2 = token SEMI (4.13: )
-> $$ = nterm Stmt (4.5-12: )
Stack now 0 6 7 20 23 37
Entering state 67
Reading a token: Next token is token ID (5.5: )
Shifting token ID (5.5: )
Entering state 58
Reading a token: Next token is token ASSIGNOP (5.7: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (5.5: )
-> $$ = nterm Exp (5.5: )
Stack now 0 6 7 20 23 37 67
Entering state 68
Next token is token ASSIGNOP (5.7: )
Shifting token ASSIGNOP (5.7: )
Entering state 99
Reading a token: Next token is token INT (5.8: )
Shifting token INT (5.8: )
Entering state 56
Reducing stack by rule 85 (line 174):
   $1 = token INT (5.8: )
-> $$ = nterm Exp (5.8: )
Stack now 0 6 7 20 23 37 67 68 99
Entering state 135
Reading a token: Next token is token SEMI (5.9: )
Reducing stack by rule 69 (line 158):
   $1 = nterm Exp (5.5: )
   $2 = token ASSIGNOP (5.7: )
   $3 = nterm Exp (5.8: )
-> $$ = nterm Exp (5.5-7: )
Stack now 0 6 7 20 23 37 67
Entering state 68
Next token is token SEMI (5.9: )
Shifting token SEMI (5.9: )
Entering state 109
Reducing stack by rule 40 (line 115):
   $1 = nterm Exp (5.5-7: )
   $2 = token SEMI (5.9: )
-> $$ = nterm Stmt (5.5-8: )
Stack now 0 6 7 20 23 37 67
Entering state 67
Reading a token: Next token is token ID (6.5: )
Shifting token ID (6.5: )
Entering state 58
Reading a token: Next token is token LB (6.6: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (6.5: )
-> $$ = nterm Exp (6.5: )
Stack now 0 6 7 20 23 37 67 67
Entering state 68
Next token is token LB (6.6: )
Shifting token LB (6.6: )
Entering state 107
Reading a token: Next token is token INT (6.7: )
Shifting token INT (6.7: )
Entering state 56
Reducing stack by rule 85 (line 174):
   $1 = token INT (6.7: )
-> $$ = nterm Exp (6.7: )
Stack now 0 6 7 20 23 37 67 67 68 107
Entering state 144
Reading a token: Next token is token RB (6.8: )
Shifting token RB (6.8: )
Entering state 155
Reducing stack by rule 82 (line 171):
   $1 = nterm Exp (6.5: )
   $2 = token LB (6.6: )
   $3 = nterm Exp (6.7: )
   $4 = token RB (6.8: )
-> $$ = nterm Exp (6.5-7: )
Stack now 0 6 7 20 23 37 67 67
Entering state 68
Reading a token: Next token is token SEMI (6.9: )
Shifting token SEMI (6.9: )
Entering state 109
Reducing stack by rule 40 (line 115):
   $1 = nterm Exp (6.5-7: )
   $2 = token SEMI (6.9: )
-> $$ = nterm Stmt (6.5-8: )
Stack now 0 6 7 20 23 37 67 67
Entering state 67
Reading a token: Now at end of input.
Reducing stack by rule 39 (line 113):
-> $$ = nterm StmtList (6.9: )
Stack now 0 6 7 20 23 37 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (6.5-8: )
   $2 = nterm StmtList (6.9: )
-> $$ = nterm StmtList (6.5-8: )
Stack now 0 6 7 20 23 37 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (5.5-8: )
   $2 = nterm StmtList (6.5-8: )
-> $$ = nterm StmtList (5.5-6.8: )
Stack now 0 6 7 20 23 37 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (4.5-12: )
   $2 = nterm StmtList (5.5-6.8: )
-> $$ = nterm StmtList (4.5-6.8: )
Stack now 0 6 7 20 23 37
Entering state 66
Now at end of input.
Reducing stack by rule 37 (line 110):
   $1 = token LC (3.11: )
   $2 = nterm DefList (3.11: )
   $3 = nterm StmtList (4.5-6.8: )
-> $$ = nterm CompSt (3.11-6.8: )
Stack now 0 6 7 20
Entering state 32
Reducing stack by rule 6 (line 52):
   $1 = nterm Specifier (3.1-2: )
   $2 = nterm FunDec (3.5-9: )
   $3 = nterm CompSt (3.11-6.8: )
-> $$ = nterm ExtDef (3.1-6.8: )
Stack now 0 6
Entering state 6
Now at end of input.
Reducing stack by rule 3 (line 48):
-> $$ = nterm ExtDefList (6.9: )
Stack now 0 6 6
Entering state 14
Reducing stack by rule 2 (line 47):
   $1 = nterm ExtDef (3.1-6.8: )
   $2 = nterm ExtDefList (6.9: )
-> $$ = nterm ExtDefList (3.1-6.8: )
Stack now 0 6
Entering state 14
Reducing stack by rule 2 (line 47):
   $1 = nterm ExtDef (1.1-10: )
   $2 = nterm ExtDefList (3.1-6.8: )
-> $$ = nterm ExtDefList (1.1-6.8: )
Stack now 0
Entering state 5
Reducing stack by rule 1 (line 44):
   $1 = nterm ExtDefList (1.1-6.8: )
-> $$ = nterm Program (1.1-6.8: )
Stack now 0
Entering state 4
Now at end of input.
Shifting token $end (6.10: )
Entering state 13
Stack now 0 4 13
Cleanup: popping token $end (6.10: )
Cleanup: popping nterm Program (1.1-6.8: )
