Starting parse
Entering state 0
Reading a token: Next token is token TYPE (1.1-2: )
Shifting token TYPE (1.1-2: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (1.1-2: )
-> $$ = nterm Specifier (1.1-2: )
Stack now 0
Entering state 7
Reading a token: Next token is token ID (1.5-7: )
Shifting token ID (1.5-7: )
Entering state 16
Reading a token: Next token is token LP (1.9: )
Shifting token LP (1.9: )
Entering state 27
Reading a token: Next token is token TYPE (1.10-11: )
Shifting token TYPE (1.10-11: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (1.10-11: )
-> $$ = nterm Specifier (1.10-11: )
Stack now 0 7 16 27
Entering state 41
Reading a token: Next token is token ID (1.14: )
Shifting token ID (1.14: )
Entering state 45
Reducing stack by rule 21 (line 81):
   $1 = token ID (1.14: )
-> $$ = nterm VarDec (1.14: )
Stack now 0 7 16 27 41
Entering state 73
Reading a token: Next token is token COMMA (1.15: )
Reducing stack by rule 32 (line 99):
   $1 = nterm Specifier (1.10-11: )
   $2 = nterm VarDec (1.14: )
-> $$ = nterm ParamDec (1.10-13: )
Stack now 0 7 16 27
Entering state 43
Next token is token COMMA (1.15: )
Shifting token COMMA (1.15: )
Entering state 75
Reading a token: Next token is token TYPE (1.16-17: )
Shifting token TYPE (1.16-17: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (1.16-17: )
-> $$ = nterm Specifier (1.16-17: )
Stack now 0 7 16 27 43 75
Entering state 41
Reading a token: Next token is token RP (1.20: )
Shifting token error (1.20: )
Entering state 72
Reducing stack by rule 34 (line 102):
   $1 = nterm Specifier (1.16-17: )
   $2 = token error (1.20: )
-> $$ = nterm ParamDec (1.16-19: )
Stack now 0 7 16 27 43 75
Entering state 43
Next token is token RP (1.20: )
Reducing stack by rule 29 (line 94):
   $1 = nterm ParamDec (1.16-19: )
-> $$ = nterm VarList (1.16-19: )
Stack now 0 7 16 27 43 75
Entering state 113
Reducing stack by rule 28 (line 93):
   $1 = nterm ParamDec (1.10-13: )
   $2 = token COMMA (1.15: )
   $3 = nterm VarList (1.16-19: )
-> $$ = nterm VarList (1.10-19: )
Stack now 0 7 16 27
Entering state 42
Next token is token RP (1.20: )
Shifting token RP (1.20: )
Entering state 74
Reducing stack by rule 24 (line 86):
   $1 = token ID (1.5-7: )
   $2 = token LP (1.9: )
   $3 = nterm VarList (1.10-19: )
   $4 = token RP (1.20: )
-> $$ = nterm FunDec (1.5-19: )
Stack now 0 7
Entering state 20
Reading a token: Next token is token LC (1.21: )
Shifting token LC (1.21: )
Entering state 23
Reading a token: Next token is token RC (1.22: )
Reducing stack by rule 58 (line 138):
-> $$ = nterm DefList (1.21: )
Stack now 0 7 20 23
Entering state 37
Next token is token RC (1.22: )
Reducing stack by rule 39 (line 113):
-> $$ = nterm StmtList (1.21: )
Stack now 0 7 20 23 37
Entering state 66
Next token is token RC (1.22: )
Shifting token RC (1.22: )
Entering state 96
Reducing stack by rule 35 (line 107):
   $1 = token LC (1.21: )
   $2 = nterm DefList (1.21: )
   $3 = nterm StmtList (1.21: )
   $4 = token RC (1.22: )
-> $$ = nterm CompSt (1.21: )
Stack now 0 7 20
Entering state 32
Reducing stack by rule 6 (line 52):
   $1 = nterm Specifier (1.1-2: )
   $2 = nterm FunDec (1.5-19: )
   $3 = nterm CompSt (1.21: )
-> $$ = nterm ExtDef (1.1-21: )
Stack now 0
Entering state 6
Reading a token: Next token is token TYPE (2.1-2: )
Shifting token TYPE (2.1-2: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (2.1-2: )
-> $$ = nterm Specifier (2.1-2: )
Stack now 0 6
Entering state 7
Reading a token: Next token is token ID (2.5-7: )
Shifting token ID (2.5-7: )
Entering state 16
Reading a token: Next token is token LP (2.9: )
Shifting token LP (2.9: )
Entering state 27
Reading a token: Next token is token COMMA (2.10: )
Shifting token error (2.10: )
Entering state 39
Next token is token COMMA (2.10: )
Shifting token COMMA (2.10: )
Entering state 69
Reading a token: Next token is token TYPE (2.11-12: )
Shifting token TYPE (2.11-12: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (2.11-12: )
-> $$ = nterm Specifier (2.11-12: )
Stack now 0 6 7 16 27 39 69
Entering state 41
Reading a token: Next token is token ID (2.15: )
Shifting token ID (2.15: )
Entering state 45
Reducing stack by rule 21 (line 81):
   $1 = token ID (2.15: )
-> $$ = nterm VarDec (2.15: )
Stack now 0 6 7 16 27 39 69 41
Entering state 73
Reading a token: Next token is token RP (2.16: )
Reducing stack by rule 32 (line 99):
   $1 = nterm Specifier (2.11-12: )
   $2 = nterm VarDec (2.15: )
-> $$ = nterm ParamDec (2.11-14: )
Stack now 0 6 7 16 27 39 69
Entering state 43
Next token is token RP (2.16: )
Reducing stack by rule 29 (line 94):
   $1 = nterm ParamDec (2.11-14: )
-> $$ = nterm VarList (2.11-14: )
Stack now 0 6 7 16 27 39 69
Entering state 111
Reducing stack by rule 30 (line 96):
   $1 = token error (2.10: )
   $2 = token COMMA (2.10: )
   $3 = nterm VarList (2.11-14: )
-> $$ = nterm VarList (2.10-14: )
Stack now 0 6 7 16 27
Entering state 42
Next token is token RP (2.16: )
Shifting token RP (2.16: )
Entering state 74
Reducing stack by rule 24 (line 86):
   $1 = token ID (2.5-7: )
   $2 = token LP (2.9: )
   $3 = nterm VarList (2.10-14: )
   $4 = token RP (2.16: )
-> $$ = nterm FunDec (2.5-15: )
Stack now 0 6 7
Entering state 20
Reading a token: Next token is token LC (2.17: )
Shifting token LC (2.17: )
Entering state 23
Reading a token: Next token is token RC (2.18: )
Reducing stack by rule 58 (line 138):
-> $$ = nterm DefList (2.17: )
Stack now 0 6 7 20 23
Entering state 37
Next token is token RC (2.18: )
Reducing stack by rule 39 (line 113):
-> $$ = nterm StmtList (2.17: )
Stack now 0 6 7 20 23 37
Entering state 66
Next token is token RC (2.18: )
Shifting token RC (2.18: )
Entering state 96
Reducing stack by rule 35 (line 107):
   $1 = token LC (2.17: )
   $2 = nterm DefList (2.17: )
   $3 = nterm StmtList (2.17: )
   $4 = token RC (2.18: )
-> $$ = nterm CompSt (2.17: )
Stack now 0 6 7 20
Entering state 32
Reducing stack by rule 6 (line 52):
   $1 = nterm Specifier (2.1-2: )
   $2 = nterm FunDec (2.5-15: )
   $3 = nterm CompSt (2.17: )
-> $$ = nterm ExtDef (2.1-17: )
Stack now 0 6
Entering state 6
Reading a token: Next token is token TYPE (3.1-2: )
Shifting token TYPE (3.1-2: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (3.1-2: )
-> $$ = nterm Specifier (3.1-2: )
Stack now 0 6 6
Entering state 7
Reading a token: Next token is token ID (3.5-7: )
Shifting token ID (3.5-7: )
Entering state 16
Reading a token: Next token is token LP (3.9: )
Shifting token LP (3.9: )
Entering state 27
Reading a token: Next token is token RP (3.10: )
Shifting token RP (3.10: )
Entering state 40
Reducing stack by rule 25 (line 87):
   $1 = token ID (3.5-7: )
   $2 = token LP (3.9: )
   $3 = token RP (3.10: )
-> $$ = nterm FunDec (3.5-9: )
Stack now 0 6 6 7
Entering state 20
Reading a token: Next token is token RC (3.11: )
Shifting token error (3.11: )
Entering state 22
Next token is token RC (3.11: )
Shifting token RC (3.11: )
Entering state 36
Reducing stack by rule 36 (line 109):
   $1 = token error (3.11: )
   $2 = token RC (3.11: )
-> $$ = nterm CompSt (3.11: )
Stack now 0 6 6 7 20
Entering state 32
Reducing stack by rule 6 (line 52):
   $1 = nterm Specifier (3.1-2: )
   $2 = nterm FunDec (3.5-9: )
   $3 = nterm CompSt (3.11: )
-> $$ = nterm ExtDef (3.1-10: )
Stack now 0 6 6
Entering state 6
Reading a token: Next token is token ID (4.1: )
Shifting token error (4.1: )
Entering state 1
Next token is token ID (4.1: )
Error: discarding token ID (4.1: )
Error: popping token error (4.1: )
Stack now 0 6 6 6
Shifting token error (4.1: )
Entering state 1
Reading a token: Next token is token SEMI (4.2: )
Shifting token SEMI (4.2: )
Entering state 9
Reducing stack by rule 7 (line 54):
   $1 = token error (4.1: )
   $2 = token SEMI (4.2: )
-> $$ = nterm ExtDef (4.1: )
Stack now 0 6 6 6
Entering state 6
Reading a token: Next token is token TYPE (5.1-2: )
Shifting token TYPE (5.1-2: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (5.1-2: )
-> $$ = nterm Specifier (5.1-2: )
Stack now 0 6 6 6 6
Entering state 7
Reading a token: Next token is token ID (5.5: )
Shifting token ID (5.5: )
Entering state 16
Reading a token: Next token is token TYPE (6.1-2: )
Reducing stack by rule 21 (line 81):
   $1 = token ID (5.5: )
-> $$ = nterm VarDec (5.5: )
Stack now 0 6 6 6 6 7
Entering state 19
Next token is token TYPE (6.1-2: )
Reducing stack by rule 12 (line 61):
   $1 = nterm VarDec (5.5: )
-> $$ = nterm ExtDecList (5.5: )
Stack now 0 6 6 6 6 7
Entering state 18
Next token is token TYPE (6.1-2: )
Reducing stack by rule 11 (line 58):
   $1 = nterm Specifier (5.1-2: )
   $2 = nterm ExtDecList (5.5: )
-> $$ = nterm ExtDef (5.1-4: )
Stack now 0 6 6 6 6
Entering state 6
Next token is token TYPE (6.1-2: )
Shifting token TYPE (6.1-2: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (6.1-2: )
-> $$ = nterm Specifier (6.1-2: )
Stack now 0 6 6 6 6 6
Entering state 7
Reading a token: Next token is token ID (6.5: )
Shifting token ID (6.5: )
Entering state 16
Reading a token: Next token is token ASSIGNOP (6.7: )
Reducing stack by rule 21 (line 81):
   $1 = token ID (6.5: )
-> $$ = nterm VarDec (6.5: )
Stack now 0 6 6 6 6 6 7
Entering state 19
Next token is token ASSIGNOP (6.7: )
Reducing stack by rule 12 (line 61):
   $1 = nterm VarDec (6.5: )
-> $$ = nterm ExtDecList (6.5: )
Stack now 0 6 6 6 6 6 7
Entering state 18
Next token is token ASSIGNOP (6.7: )
Shifting token error (6.7: )
Entering state 28
Next token is token ASSIGNOP (6.7: )
Error: discarding token ASSIGNOP (6.7: )
Error: popping token error (6.7: )
Stack now 0 6 6 6 6 6 7 18
Shifting token error (6.7: )
Entering state 28
Reading a token: Next token is token INT (6.9: )
Error: discarding token INT (6.9: )
Error: popping token error (6.7: )
Stack now 0 6 6 6 6 6 7 18
Shifting token error (6.7-8: )
Entering state 28
Reading a token: Next token is token SEMI (6.10: )
Shifting token SEMI (6.10: )
Entering state 44
Reducing stack by rule 10 (line 57):
   $1 = nterm Specifier (6.1-2: )
   $2 = nterm ExtDecList (6.5: )
   $3 = token error (6.7-8: )
   $4 = token SEMI (6.10: )
-> $$ = nterm ExtDef (6.1-9: )
Stack now 0 6 6 6 6 6
Entering state 6
Reading a token: Next token is token TYPE (7.1-2: )
Shifting token TYPE (7.1-2: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (7.1-2: )
-> $$ = nterm Specifier (7.1-2: )
Stack now 0 6 6 6 6 6 6
Entering state 7
Reading a token: Next token is token ID (7.5-7: )
Shifting token ID (7.5-7: )
Entering state 16
Reading a token: Next token is token LP (7.9: )
Shifting token LP (7.9: )
Entering state 27
Reading a token: Next token is token RP (7.10: )
Shifting token RP (7.10: )
Entering state 40
Reducing stack by rule 25 (line 87):
   $1 = token ID (7.5-7: )
   $2 = token LP (7.9: )
   $3 = token RP (7.10: )
-> $$ = nterm FunDec (7.5-9: )
Stack now 0 6 6 6 6 6 6 7
Entering state 20
Reading a token: Next token is token LC (7.11: )
Shifting token LC (7.11: )
Entering state 23
Reading a token: Next token is token TYPE (8.2-3: )
Shifting token TYPE (8.2-3: )
Entering state 2
Reducing stack by rule 14 (line 67):
   $1 = token TYPE (8.2-3: )
-> $$ = nterm Specifier (8.2-3: )
Stack now 0 6 6 6 6 6 6 7 20 23
Entering state 33
Reading a token: Next token is token ID (8.6: )
Shifting token ID (8.6: )
Entering state 45
Reducing stack by rule 21 (line 81):
   $1 = token ID (8.6: )
-> $$ = nterm VarDec (8.6: )
Stack now 0 6 6 6 6 6 6 7 20 23 33
Entering state 50
Reading a token: Next token is token COMMA (8.7: )
Reducing stack by rule 66 (line 150):
   $1 = nterm VarDec (8.6: )
-> $$ = nterm Dec (8.6: )
Stack now 0 6 6 6 6 6 6 7 20 23 33
Entering state 52
Next token is token COMMA (8.7: )
Shifting token COMMA (8.7: )
Entering state 83
Reading a token: Next token is token SEMI (8.8: )
Shifting token error (8.8: )
Entering state 118
Next token is token SEMI (8.8: )
Reducing stack by rule 65 (line 148):
   $1 = nterm Dec (8.6: )
   $2 = token COMMA (8.7: )
   $3 = token error (8.8: )
-> $$ = nterm DecList (8.6-7: )
Stack now 0 6 6 6 6 6 6 7 20 23 33
Entering state 51
Next token is token SEMI (8.8: )
Shifting token SEMI (8.8: )
Entering state 82
Reducing stack by rule 59 (line 140):
   $1 = nterm Specifier (8.2-3: )
   $2 = nterm DecList (8.6-7: )
   $3 = token SEMI (8.8: )
-> $$ = nterm Def (8.2-7: )
Stack now 0 6 6 6 6 6 6 7 20 23
Entering state 35
Reading a token: Next token is token ID (9.2: )
Reducing stack by rule 58 (line 138):
-> $$ = nterm DefList (8.8: )
Stack now 0 6 6 6 6 6 6 7 20 23 35
Entering state 54
Reducing stack by rule 57 (line 137):
   $1 = nterm Def (8.2-7: )
   $2 = nterm DefList (8.8: )
-> $$ = nterm DefList (8.2-7: )
Stack now 0 6 6 6 6 6 6 7 20 23
Entering state 37
Next token is token ID (9.2: )
Shifting token ID (9.2: )
Entering state 58
Reading a token: Next token is token LB (9.3: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (9.2: )
-> $$ = nterm Exp (9.2: )
Stack now 0 6 6 6 6 6 6 7 20 23 37
Entering state 68
Next token is token LB (9.3: )
Shifting token LB (9.3: )
Entering state 107
Reading a token: Next token is token INT (9.4: )
Shifting token INT (9.4: )
Entering state 56
Reducing stack by rule 85 (line 174):
   $1 = token INT (9.4: )
-> $$ = nterm Exp (9.4: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 68 107
Entering state 144
Reading a token: Next token is token RB (9.5: )
Shifting token RB (9.5: )
Entering state 155
Reducing stack by rule 82 (line 171):
   $1 = nterm Exp (9.2: )
   $2 = token LB (9.3: )
   $3 = nterm Exp (9.4: )
   $4 = token RB (9.5: )
-> $$ = nterm Exp (9.2-4: )
Stack now 0 6 6 6 6 6 6 7 20 23 37
Entering state 68
Reading a token: Next token is token LB (9.6: )
Shifting token LB (9.6: )
Entering state 107
Reading a token: Next token is token INT (9.7: )
Shifting token INT (9.7: )
Entering state 56
Reducing stack by rule 85 (line 174):
   $1 = token INT (9.7: )
-> $$ = nterm Exp (9.7: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 68 107
Entering state 144
Reading a token: Next token is token ASSIGNOP (9.9: )
Shifting token ASSIGNOP (9.9: )
Entering state 99
Reading a token: Next token is token INT (9.11: )
Shifting token INT (9.11: )
Entering state 56
Reducing stack by rule 85 (line 174):
   $1 = token INT (9.11: )
-> $$ = nterm Exp (9.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 68 107 144 99
Entering state 135
Reading a token: Next token is token SEMI (9.12: )
Reducing stack by rule 69 (line 158):
   $1 = nterm Exp (9.7: )
   $2 = token ASSIGNOP (9.9: )
   $3 = nterm Exp (9.11: )
-> $$ = nterm Exp (9.7-10: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 68 107
Entering state 144
Next token is token SEMI (9.12: )
Shifting token error (9.12: )
Entering state 154
Reducing stack by rule 91 (line 181):
   $1 = nterm Exp (9.2-4: )
   $2 = token LB (9.6: )
   $3 = nterm Exp (9.7-10: )
   $4 = token error (9.12: )
-> $$ = nterm Exp (9.2-11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37
Entering state 68
Next token is token SEMI (9.12: )
Shifting token SEMI (9.12: )
Entering state 109
Reducing stack by rule 40 (line 115):
   $1 = nterm Exp (9.2-11: )
   $2 = token SEMI (9.12: )
-> $$ = nterm Stmt (9.2-11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37
Entering state 67
Reading a token: Next token is token ID (10.2: )
Shifting token ID (10.2: )
Entering state 58
Reading a token: Next token is token LB (10.3: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (10.2: )
-> $$ = nterm Exp (10.2: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67
Entering state 68
Next token is token LB (10.3: )
Shifting token LB (10.3: )
Entering state 107
Reading a token: Next token is token INT (10.4: )
Shifting token INT (10.4: )
Entering state 56
Reducing stack by rule 85 (line 174):
   $1 = token INT (10.4: )
-> $$ = nterm Exp (10.4: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 68 107
Entering state 144
Reading a token: Next token is token COMMA (10.5: )
Shifting token error (10.5: )
Entering state 154
Reducing stack by rule 91 (line 181):
   $1 = nterm Exp (10.2: )
   $2 = token LB (10.3: )
   $3 = nterm Exp (10.4: )
   $4 = token error (10.5: )
-> $$ = nterm Exp (10.2-4: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67
Entering state 68
Next token is token COMMA (10.5: )
Error: discarding token COMMA (10.5: )
Shifting token error (10.5: )
Entering state 98
Reading a token: Next token is token INT (10.6: )
Reducing stack by rule 53 (line 129):
   $1 = nterm Exp (10.2-4: )
   $2 = token error (10.5: )
-> $$ = nterm Stmt (10.2-4: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67
Entering state 67
Next token is token INT (10.6: )
Shifting token INT (10.6: )
Entering state 56
Reducing stack by rule 85 (line 174):
   $1 = token INT (10.6: )
-> $$ = nterm Exp (10.6: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67
Entering state 68
Reading a token: Next token is token RB (10.7: )
Shifting token error (10.7: )
Entering state 98
Next token is token RB (10.7: )
Reducing stack by rule 53 (line 129):
   $1 = nterm Exp (10.6: )
   $2 = token error (10.7: )
-> $$ = nterm Stmt (10.6: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67
Entering state 67
Next token is token RB (10.7: )
Error: discarding token RB (10.7: )
Shifting token error (10.7: )
Entering state 55
Reading a token: Next token is token ASSIGNOP (10.9: )
Error: discarding token ASSIGNOP (10.9: )
Error: popping token error (10.7: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67
Shifting token error (10.7-8: )
Entering state 55
Reading a token: Next token is token FLOAT (10.11-12: )
Error: discarding token FLOAT (10.11-12: )
Error: popping token error (10.7-8: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67
Shifting token error (10.7-12: )
Entering state 55
Reading a token: Next token is token SEMI (10.14: )
Shifting token SEMI (10.14: )
Entering state 85
Reducing stack by rule 55 (line 131):
   $1 = token error (10.7-12: )
   $2 = token SEMI (10.14: )
-> $$ = nterm Stmt (10.7-13: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67
Entering state 67
Reading a token: Next token is token ID (11.2-4: )
Shifting token ID (11.2-4: )
Entering state 58
Reading a token: Next token is token LP (11.6: )
Shifting token LP (11.6: )
Entering state 86
Reading a token: Next token is token ID (11.7: )
Shifting token ID (11.7: )
Entering state 58
Reading a token: Next token is token COMMA (11.8: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (11.7: )
-> $$ = nterm Exp (11.7: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 58 86
Entering state 123
Next token is token COMMA (11.8: )
Shifting token COMMA (11.8: )
Entering state 147
Reading a token: Next token is token RP (11.9: )
Error: popping token COMMA (11.8: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 58 86 123
Error: popping nterm Exp (11.7: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 58 86
Shifting token error (11.7-8: )
Entering state 121
Next token is token RP (11.9: )
Shifting token RP (11.9: )
Entering state 146
Reducing stack by rule 88 (line 178):
   $1 = token ID (11.2-4: )
   $2 = token LP (11.6: )
   $3 = token error (11.7-8: )
   $4 = token RP (11.9: )
-> $$ = nterm Exp (11.2-8: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67
Entering state 68
Reading a token: Next token is token SEMI (11.10: )
Shifting token SEMI (11.10: )
Entering state 109
Reducing stack by rule 40 (line 115):
   $1 = nterm Exp (11.2-8: )
   $2 = token SEMI (11.10: )
-> $$ = nterm Stmt (11.2-9: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67
Entering state 67
Reading a token: Next token is token ID (12.2-4: )
Shifting token ID (12.2-4: )
Entering state 58
Reading a token: Next token is token LP (12.6: )
Shifting token LP (12.6: )
Entering state 86
Reading a token: Next token is token SEMI (12.7: )
Shifting token error (12.7: )
Entering state 121
Next token is token SEMI (12.7: )
Reducing stack by rule 89 (line 179):
   $1 = token ID (12.2-4: )
   $2 = token LP (12.6: )
   $3 = token error (12.7: )
-> $$ = nterm Exp (12.2-6: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67
Entering state 68
Next token is token SEMI (12.7: )
Shifting token SEMI (12.7: )
Entering state 109
Reducing stack by rule 40 (line 115):
   $1 = nterm Exp (12.2-6: )
   $2 = token SEMI (12.7: )
-> $$ = nterm Stmt (12.2-6: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67
Entering state 67
Reading a token: Next token is token ID (13.2-4: )
Shifting token ID (13.2-4: )
Entering state 58
Reading a token: Next token is token RP (13.6: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (13.2-4: )
-> $$ = nterm Exp (13.2-4: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67
Entering state 68
Next token is token RP (13.6: )
Shifting token error (13.6: )
Entering state 98
Next token is token RP (13.6: )
Reducing stack by rule 53 (line 129):
   $1 = nterm Exp (13.2-4: )
   $2 = token error (13.6: )
-> $$ = nterm Stmt (13.2-5: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67
Entering state 67
Next token is token RP (13.6: )
Error: discarding token RP (13.6: )
Shifting token error (13.6: )
Entering state 55
Reading a token: Next token is token SEMI (13.7: )
Shifting token SEMI (13.7: )
Entering state 85
Reducing stack by rule 55 (line 131):
   $1 = token error (13.6: )
   $2 = token SEMI (13.7: )
-> $$ = nterm Stmt (13.6: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67
Entering state 67
Reading a token: Next token is token SEMI (14.2: )
Shifting token error (14.2: )
Entering state 55
Next token is token SEMI (14.2: )
Shifting token SEMI (14.2: )
Entering state 85
Reducing stack by rule 55 (line 131):
   $1 = token error (14.2: )
   $2 = token SEMI (14.2: )
-> $$ = nterm Stmt (14.2: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67
Entering state 67
Reading a token: Next token is token ID (15.5: )
Shifting token ID (15.5: )
Entering state 58
Reading a token: Next token is token ASSIGNOP (15.7: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (15.5: )
-> $$ = nterm Exp (15.5: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67
Entering state 68
Next token is token ASSIGNOP (15.7: )
Shifting token ASSIGNOP (15.7: )
Entering state 99
Reading a token: Next token is token ID (15.9: )
Shifting token ID (15.9: )
Entering state 58
Reading a token: Next token is token PLUS (15.10: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (15.9: )
-> $$ = nterm Exp (15.9: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 68 99
Entering state 135
Next token is token PLUS (15.10: )
Shifting token PLUS (15.10: )
Entering state 103
Reading a token: Next token is token SEMI (15.11: )
Error: popping token PLUS (15.10: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 68 99 135
Error: popping nterm Exp (15.9: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 68 99
Shifting token error (15.9-10: )
Entering state 134
Reducing stack by rule 87 (line 177):
   $1 = nterm Exp (15.5: )
   $2 = token ASSIGNOP (15.7: )
   $3 = token error (15.9-10: )
-> $$ = nterm Exp (15.5-10: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67
Entering state 68
Next token is token SEMI (15.11: )
Shifting token SEMI (15.11: )
Entering state 109
Reducing stack by rule 40 (line 115):
   $1 = nterm Exp (15.5-10: )
   $2 = token SEMI (15.11: )
-> $$ = nterm Stmt (15.5-10: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67
Entering state 67
Reading a token: Next token is token IF (16.2: )
Shifting token IF (16.2: )
Entering state 60
Reading a token: Next token is token LP (16.5: )
Shifting token LP (16.5: )
Entering state 90
Reading a token: Next token is token RP (16.6: )
Shifting token error (16.6: )
Entering state 128
Next token is token RP (16.6: )
Shifting token RP (16.6: )
Entering state 149
Reading a token: Next token is token ID (16.8: )
Shifting token ID (16.8: )
Entering state 58
Reading a token: Next token is token SEMI (16.9: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (16.8: )
-> $$ = nterm Exp (16.8: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 60 90 128 149
Entering state 68
Next token is token SEMI (16.9: )
Shifting token SEMI (16.9: )
Entering state 109
Reducing stack by rule 40 (line 115):
   $1 = nterm Exp (16.8: )
   $2 = token SEMI (16.9: )
-> $$ = nterm Stmt (16.8: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 60 90 128 149
Entering state 157
Reading a token: Next token is token ELSE (16.11-13: )
Shifting token ELSE (16.11-13: )
Entering state 161
Reading a token: Next token is token ID (16.16: )
Shifting token ID (16.16: )
Entering state 58
Reading a token: Next token is token SEMI (16.17: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (16.16: )
-> $$ = nterm Exp (16.16: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 60 90 128 149 157 161
Entering state 68
Next token is token SEMI (16.17: )
Shifting token SEMI (16.17: )
Entering state 109
Reducing stack by rule 40 (line 115):
   $1 = nterm Exp (16.16: )
   $2 = token SEMI (16.17: )
-> $$ = nterm Stmt (16.16: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 60 90 128 149 157 161
Entering state 163
Reducing stack by rule 47 (line 123):
   $1 = token IF (16.2: )
   $2 = token LP (16.5: )
   $3 = token error (16.6: )
   $4 = token RP (16.6: )
   $5 = nterm Stmt (16.8: )
   $6 = token ELSE (16.11-13: )
   $7 = nterm Stmt (16.16: )
-> $$ = nterm Stmt (16.2-16: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67
Entering state 67
Reading a token: Next token is token IF (17.2: )
Shifting token IF (17.2: )
Entering state 60
Reading a token: Next token is token LP (17.5: )
Shifting token LP (17.5: )
Entering state 90
Reading a token: Next token is token ID (17.6: )
Shifting token ID (17.6: )
Entering state 58
Reading a token: Next token is token RP (17.7: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (17.6: )
-> $$ = nterm Exp (17.6: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 60 90
Entering state 129
Next token is token RP (17.7: )
Shifting token RP (17.7: )
Entering state 150
Reading a token: Next token is token ID (17.9: )
Shifting token ID (17.9: )
Entering state 58
Reading a token: Next token is token ELSE (17.11-13: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (17.9: )
-> $$ = nterm Exp (17.9: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 60 90 129 150
Entering state 68
Next token is token ELSE (17.11-13: )
Shifting token error (17.11-13: )
Entering state 98
Next token is token ELSE (17.11-13: )
Reducing stack by rule 53 (line 129):
   $1 = nterm Exp (17.9: )
   $2 = token error (17.11-13: )
-> $$ = nterm Stmt (17.9-13: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 60 90 129 150
Entering state 158
Next token is token ELSE (17.11-13: )
Shifting token ELSE (17.11-13: )
Entering state 162
Reading a token: Next token is token ID (17.16: )
Shifting token ID (17.16: )
Entering state 58
Reading a token: Next token is token SEMI (17.17: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (17.16: )
-> $$ = nterm Exp (17.16: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 60 90 129 150 158 162
Entering state 68
Next token is token SEMI (17.17: )
Shifting token SEMI (17.17: )
Entering state 109
Reducing stack by rule 40 (line 115):
   $1 = nterm Exp (17.16: )
   $2 = token SEMI (17.17: )
-> $$ = nterm Stmt (17.16: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 60 90 129 150 158 162
Entering state 164
Reducing stack by rule 44 (line 119):
   $1 = token IF (17.2: )
   $2 = token LP (17.5: )
   $3 = nterm Exp (17.6: )
   $4 = token RP (17.7: )
   $5 = nterm Stmt (17.9-13: )
   $6 = token ELSE (17.11-13: )
   $7 = nterm Stmt (17.16: )
-> $$ = nterm Stmt (17.2-16: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67
Entering state 67
Reading a token: Next token is token WHILE (18.2-5: )
Shifting token WHILE (18.2-5: )
Entering state 61
Reading a token: Next token is token LP (18.8: )
Shifting token LP (18.8: )
Entering state 92
Reading a token: Next token is token TYPE (18.9-10: )
Shifting token error (18.9-10: )
Entering state 130
Next token is token TYPE (18.9-10: )
Error: discarding token TYPE (18.9-10: )
Error: popping token error (18.9-10: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 67 61 92
Shifting token error (18.9-10: )
Entering state 130
Reading a token: Next token is token RP (18.12: )
Shifting token RP (18.12: )
Entering state 151
Reading a token: Next token is token ID (18.14: )
Shifting token ID (18.14: )
Entering state 58
Reading a token: Next token is token SEMI (18.15: )
Reducing stack by rule 84 (line 173):
   $1 = token ID (18.14: )
-> $$ = nterm Exp (18.14: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 67 61 92 130 151
Entering state 68
Next token is token SEMI (18.15: )
Shifting token SEMI (18.15: )
Entering state 109
Reducing stack by rule 40 (line 115):
   $1 = nterm Exp (18.14: )
   $2 = token SEMI (18.15: )
-> $$ = nterm Stmt (18.14: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 67 61 92 130 151
Entering state 159
Reducing stack by rule 48 (line 124):
   $1 = token WHILE (18.2-5: )
   $2 = token LP (18.8: )
   $3 = token error (18.9-10: )
   $4 = token RP (18.12: )
   $5 = nterm Stmt (18.14: )
-> $$ = nterm Stmt (18.2-14: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 67
Entering state 67
Reading a token: Next token is token RETURN (19.2-6: )
Shifting token RETURN (19.2-6: )
Entering state 59
Reading a token: Next token is token TYPE (19.9-10: )
Shifting token error (19.9-10: )
Entering state 87
Next token is token TYPE (19.9-10: )
Error: discarding token TYPE (19.9-10: )
Error: popping token error (19.9-10: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 67 67 59
Shifting token error (19.9-10: )
Entering state 87
Reading a token: Next token is token SEMI (19.12: )
Shifting token SEMI (19.12: )
Entering state 125
Reducing stack by rule 51 (line 127):
   $1 = token RETURN (19.2-6: )
   $2 = token error (19.9-10: )
   $3 = token SEMI (19.12: )
-> $$ = nterm Stmt (19.2-11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 67 67
Entering state 67
Reading a token: Now at end of input.
Reducing stack by rule 39 (line 113):
-> $$ = nterm StmtList (19.12: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (19.2-11: )
   $2 = nterm StmtList (19.12: )
-> $$ = nterm StmtList (19.2-11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (18.2-14: )
   $2 = nterm StmtList (19.2-11: )
-> $$ = nterm StmtList (18.2-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (17.2-16: )
   $2 = nterm StmtList (18.2-19.11: )
-> $$ = nterm StmtList (17.2-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (16.2-16: )
   $2 = nterm StmtList (17.2-19.11: )
-> $$ = nterm StmtList (16.2-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (15.5-10: )
   $2 = nterm StmtList (16.2-19.11: )
-> $$ = nterm StmtList (15.5-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (14.2: )
   $2 = nterm StmtList (15.5-19.11: )
-> $$ = nterm StmtList (14.2-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (13.6: )
   $2 = nterm StmtList (14.2-19.11: )
-> $$ = nterm StmtList (13.6-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (13.2-5: )
   $2 = nterm StmtList (13.6-19.11: )
-> $$ = nterm StmtList (13.2-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (12.2-6: )
   $2 = nterm StmtList (13.2-19.11: )
-> $$ = nterm StmtList (12.2-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (11.2-9: )
   $2 = nterm StmtList (12.2-19.11: )
-> $$ = nterm StmtList (11.2-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (10.7-13: )
   $2 = nterm StmtList (11.2-19.11: )
-> $$ = nterm StmtList (10.7-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (10.6: )
   $2 = nterm StmtList (10.7-19.11: )
-> $$ = nterm StmtList (10.6-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (10.2-4: )
   $2 = nterm StmtList (10.6-19.11: )
-> $$ = nterm StmtList (10.2-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37 67
Entering state 97
Reducing stack by rule 38 (line 112):
   $1 = nterm Stmt (9.2-11: )
   $2 = nterm StmtList (10.2-19.11: )
-> $$ = nterm StmtList (9.2-19.11: )
Stack now 0 6 6 6 6 6 6 7 20 23 37
Entering state 66
Now at end of input.
Reducing stack by rule 37 (line 110):
   $1 = token LC (7.11: )
   $2 = nterm DefList (8.2-7: )
   $3 = nterm StmtList (9.2-19.11: )
-> $$ = nterm CompSt (7.11-19.11: )
Stack now 0 6 6 6 6 6 6 7 20
Entering state 32
Reducing stack by rule 6 (line 52):
   $1 = nterm Specifier (7.1-2: )
   $2 = nterm FunDec (7.5-9: )
   $3 = nterm CompSt (7.11-19.11: )
-> $$ = nterm ExtDef (7.1-19.11: )
Stack now 0 6 6 6 6 6 6
Entering state 6
Now at end of input.
Reducing stack by rule 3 (line 48):
-> $$ = nterm ExtDefList (19.12: )
Stack now 0 6 6 6 6 6 6 6
Entering state 14
Reducing stack by rule 2 (line 47):
   $1 = nterm ExtDef (7.1-19.11: )
   $2 = nterm ExtDefList (19.12: )
-> $$ = nterm ExtDefList (7.1-19.11: )
Stack now 0 6 6 6 6 6 6
Entering state 14
Reducing stack by rule 2 (line 47):
   $1 = nterm ExtDef (6.1-9: )
   $2 = nterm ExtDefList (7.1-19.11: )
-> $$ = nterm ExtDefList (6.1-19.11: )
Stack now 0 6 6 6 6 6
Entering state 14
Reducing stack by rule 2 (line 47):
   $1 = nterm ExtDef (5.1-4: )
   $2 = nterm ExtDefList (6.1-19.11: )
-> $$ = nterm ExtDefList (5.1-19.11: )
Stack now 0 6 6 6 6
Entering state 14
Reducing stack by rule 2 (line 47):
   $1 = nterm ExtDef (4.1: )
   $2 = nterm ExtDefList (5.1-19.11: )
-> $$ = nterm ExtDefList (4.1-19.11: )
Stack now 0 6 6 6
Entering state 14
Reducing stack by rule 2 (line 47):
   $1 = nterm ExtDef (3.1-10: )
   $2 = nterm ExtDefList (4.1-19.11: )
-> $$ = nterm ExtDefList (3.1-19.11: )
Stack now 0 6 6
Entering state 14
Reducing stack by rule 2 (line 47):
   $1 = nterm ExtDef (2.1-17: )
   $2 = nterm ExtDefList (3.1-19.11: )
-> $$ = nterm ExtDefList (2.1-19.11: )
Stack now 0 6
Entering state 14
Reducing stack by rule 2 (line 47):
   $1 = nterm ExtDef (1.1-21: )
   $2 = nterm ExtDefList (2.1-19.11: )
-> $$ = nterm ExtDefList (1.1-19.11: )
Stack now 0
Entering state 5
Reducing stack by rule 1 (line 44):
   $1 = nterm ExtDefList (1.1-19.11: )
-> $$ = nterm Program (1.1-19.11: )
Stack now 0
Entering state 4
Now at end of input.
Shifting token $end (19.13: )
Entering state 13
Stack now 0 4 13
Cleanup: popping token $end (19.13: )
Cleanup: popping nterm Program (1.1-19.11: )
