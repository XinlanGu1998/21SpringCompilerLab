Starting parse
Entering state 0
Reading a token: Next token is token TYPE ()
Shifting token TYPE ()
Entering state 1
Reducing stack by rule 9 (line 42):
   $1 = token TYPE ()
-> $$ = nterm Specifier ()
Stack now 0
Entering state 6
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 13
Reading a token: Next token is token LP ()
Shifting token LP ()
Entering state 19
Reading a token: Next token is token RP ()
Shifting token RP ()
Entering state 28
Reducing stack by rule 19 (line 58):
   $1 = token ID ()
   $2 = token LP ()
   $3 = token RP ()
-> $$ = nterm FunDec ()
Stack now 0 6
Entering state 17
Reading a token: Next token is token LC ()
Shifting token LC ()
Entering state 23
Reading a token: Next token is token TYPE ()
Shifting token TYPE ()
Entering state 1
Reducing stack by rule 9 (line 42):
   $1 = token TYPE ()
-> $$ = nterm Specifier ()
Stack now 0 6 17 23
Entering state 25
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 32
Reducing stack by rule 16 (line 54):
   $1 = token ID ()
-> $$ = nterm VarDec ()
Stack now 0 6 17 23 25
Entering state 36
Reading a token: Next token is token LB ()
Shifting token LB ()
Entering state 22
Reading a token: Next token is token INT ()
Shifting token INT ()
Entering state 34
Reading a token: Next token is token RB ()
Shifting token RB ()
Entering state 44
Reducing stack by rule 17 (line 55):
   $1 = nterm VarDec ()
   $2 = token LB ()
   $3 = token INT ()
   $4 = token RB ()
-> $$ = nterm VarDec ()
Stack now 0 6 17 23 25
Entering state 36
Reading a token: Next token is token LB ()
Shifting token LB ()
Entering state 22
Reading a token: Next token is token INT ()
Shifting token INT ()
Entering state 34
Reading a token: Next token is token RB ()
Shifting token RB ()
Entering state 44
Reducing stack by rule 17 (line 55):
   $1 = nterm VarDec ()
   $2 = token LB ()
   $3 = token INT ()
   $4 = token RB ()
-> $$ = nterm VarDec ()
Stack now 0 6 17 23 25
Entering state 36
Reading a token: Next token is token SEMI ()
Reducing stack by rule 37 (line 87):
   $1 = nterm VarDec ()
-> $$ = nterm Dec ()
Stack now 0 6 17 23 25
Entering state 38
Next token is token SEMI ()
Reducing stack by rule 35 (line 84):
   $1 = nterm Dec ()
-> $$ = nterm DecList ()
Stack now 0 6 17 23 25
Entering state 37
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 59
Reducing stack by rule 34 (line 82):
   $1 = nterm Specifier ()
   $2 = nterm DecList ()
   $3 = token SEMI ()
-> $$ = nterm Def ()
Stack now 0 6 17 23
Entering state 27
Reading a token: Next token is token TYPE ()
Shifting token TYPE ()
Entering state 1
Reducing stack by rule 9 (line 42):
   $1 = token TYPE ()
-> $$ = nterm Specifier ()
Stack now 0 6 17 23 27
Entering state 25
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 32
Reducing stack by rule 16 (line 54):
   $1 = token ID ()
-> $$ = nterm VarDec ()
Stack now 0 6 17 23 27 25
Entering state 36
Reading a token: Next token is token SEMI ()
Reducing stack by rule 37 (line 87):
   $1 = nterm VarDec ()
-> $$ = nterm Dec ()
Stack now 0 6 17 23 27 25
Entering state 38
Next token is token SEMI ()
Reducing stack by rule 35 (line 84):
   $1 = nterm Dec ()
-> $$ = nterm DecList ()
Stack now 0 6 17 23 27 25
Entering state 37
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 59
Reducing stack by rule 34 (line 82):
   $1 = nterm Specifier ()
   $2 = nterm DecList ()
   $3 = token SEMI ()
-> $$ = nterm Def ()
Stack now 0 6 17 23 27
Entering state 27
Reading a token: Next token is token ID ()
Reducing stack by rule 33 (line 80):
-> $$ = nterm DefList ()
Stack now 0 6 17 23 27 27
Entering state 40
Reducing stack by rule 32 (line 79):
   $1 = nterm Def ()
   $2 = nterm DefList ()
-> $$ = nterm DefList ()
Stack now 0 6 17 23 27
Entering state 40
Reducing stack by rule 32 (line 79):
   $1 = nterm Def ()
   $2 = nterm DefList ()
-> $$ = nterm DefList ()
Stack now 0 6 17 23
Entering state 35
Next token is token ID ()
Shifting token ID ()
Entering state 47
Reading a token: Next token is token LB ()
Reducing stack by rule 54 (line 106):
   $1 = token ID ()
-> $$ = nterm Exp ()
Stack now 0 6 17 23 35
Entering state 57
Next token is token LB ()
Shifting token LB ()
Entering state 80
Reading a token: Next token is token INT ()
Shifting token INT ()
Entering state 45
Reducing stack by rule 55 (line 107):
   $1 = token INT ()
-> $$ = nterm Exp ()
Stack now 0 6 17 23 35 57 80
Entering state 99
Reading a token: Next token is token COMMA ()
ERROR TYPE B at line 4: syntax error
Error: popping nterm Exp ()
Stack now 0 6 17 23 35 57 80
Error: popping token LB ()
Stack now 0 6 17 23 35 57
Error: popping nterm Exp ()
Stack now 0 6 17 23 35
Error: popping nterm DefList ()
Stack now 0 6 17 23
Error: popping token LC ()
Stack now 0 6 17
Error: popping nterm FunDec ()
Stack now 0 6
Error: popping nterm Specifier ()
Stack now 0
Cleanup: discarding lookahead token COMMA ()
Stack now 0
